function toJalaali(d, i, a) { return d2j(g2d(d, i, a)) } function toGregorian(d, i, a) { return d2g(j2d(d, i, a)) } function isValidJalaaliDate(d, i, a) { return d >= -61 && d <= 3177 && i >= 1 && i <= 12 && a >= 1 && a <= jalaaliMonthLength(d, i) } function isLeapJalaaliYear(d) { return 0 === jalCal(d).leap } function jalaaliMonthLength(d, i) { return i <= 6 ? 31 : i <= 11 ? 30 : isLeapJalaaliYear(d) ? 30 : 29 } function jalCal(d) { var i, a, r, n, t = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178], v = t.length, o = d + 621, e = -14, l = t[0], u = 1; if (d < l || d >= t[v - 1]) throw new Error("Invalid Jalaali year " + d); for (n = 1; n < v && (u = (i = t[n]) - l, !(d < i)); n += 1)e = e + 8 * div(u, 33) + div(mod(u, 33), 4), l = i; e = e + 8 * div(r = d - l, 33) + div(mod(r, 33) + 3, 4), 4 === mod(u, 33) && u - r == 4 && (e += 1); var m = 20 + e - (div(o, 4) - div(3 * (div(o, 100) + 1), 4) - 150); return u - r < 6 && (r = r - u + 33 * div(u + 4, 33)), -1 === (a = mod(mod(r + 1, 33) - 1, 4)) && (a = 4), { leap: a, gy: o, march: m } } function j2d(d, i, a) { var r = jalCal(d); return g2d(r.gy, 3, r.march) + 31 * (i - 1) - div(i, 7) * (i - 7) + a - 1 } function d2j(d) { var i, a = d2g(d).gy, r = a - 621, n = jalCal(r); if ((i = d - g2d(a, 3, n.march)) >= 0) { if (i <= 185) return { jy: r, jm: 1 + div(i, 31), jd: mod(i, 31) + 1 }; i -= 186 } else r -= 1, i += 179, 1 === n.leap && (i += 1); return { jy: r, jm: 7 + div(i, 30), jd: mod(i, 30) + 1 } } function g2d(d, i, a) { var r = div(1461 * (d + div(i - 8, 6) + 100100), 4) + div(153 * mod(i + 9, 12) + 2, 5) + a - 34840408; return r = r - div(3 * div(d + 100100 + div(i - 8, 6), 100), 4) + 752 } function d2g(d) { var i; i = (i = 4 * d + 139361631) + 4 * div(3 * div(4 * d + 183187720, 146097), 4) - 3908; var a = 5 * div(mod(i, 1461), 4) + 308, r = div(mod(a, 153), 5) + 1, n = mod(div(a, 153), 12) + 1; return { gy: div(i, 1461) - 100100 + div(8 - n, 6), gm: n, gd: r } } function div(d, i) { return ~~(d / i) } function mod(d, i) { return d - ~~(d / i) * i }